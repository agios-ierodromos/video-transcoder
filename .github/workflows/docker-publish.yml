name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '41 16 * * *'
  push:
    branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      # See: https://github.com/marketplace/actions/thinkdolabs-curl
      - name: Downloads the organization .env file
        uses: thinkdolabs/curl@v1
        with:
          args: --location -o organization.env https://raw.githubusercontent.com/agios-ierodromos/.github/main/.env

      # See: https://github.com/marketplace/actions/environment-variables-from-dotenv
      - name: Loads environment variables from .env
        uses: c-py/action-dotenv-to-setenv@v4
        with:
          env-file: organization.env

      # See: https://github.com/marketplace/actions/checkout
      - name: Checkout repository
        uses: actions/checkout@$v3.3.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ vars.REGISTRY }}
        uses: docker/login-action@$v2.1.0
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        uses: docker/metadata-action@$v4.3.0
        id: meta
        with:
          images: ${{ vars.REGISTRY }}/${{ github.repository }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@$v3.3.0
        with:
          context: .
          provenance: false
          sbom: false
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
